import . "sdl_structs.odin";
import . "sdl_constants.odin";
import "strings.odin";

foreign_system_library (
	lib "SDL2.lib";
)

SDL_Hint_Callback :: proc(interval: u32, param: rawptr) -> u32 #cc_c;
SDL_Event_Filter :: proc(userdata: rawptr, param: ^SDL_Event) -> i32 #cc_c;
SDL_Timer_Callback :: proc(interval: u32, param: rawptr) -> u32 #cc_c;
SDL_AudioFilter :: proc(cvt: ^SDL_AudioCVT, format: SDL_AudioFormat) #cc_c;

SDL_Bool :: enum i32
{
	SDL_False,
	SDL_True
}

SDL_Timer_Id :: i32;
SDL_Spin_Lock :: i32;
SDL_Audio_Device :: u32;

foreign lib {
	sdl_add_event_watch 								:: proc(filter: SDL_Event_Filter, userdata: rawptr)																									#link_name "SDL_AddEventWatch" ---;
	sdl_add_hint_callback  								:: proc(name: ^u8, callback: SDL_Hint_Callback, userdata: rawptr)  																					#link_name "SDL_AddHintCallback" ---;
	sdl_add_timer 										:: proc(interval: u32, callback: SDL_Timer_Callback, param: rawptr) -> SDL_Timer_Id																	#link_name "SDL_AddTimer" ---;
	sdl_alloc_format 									:: proc(pixel_format: u32) -> SDL_Pixel_Format																										#link_name "SDL_AllocFormat" ---;
	sdl_alloc_palette 									:: proc(ncolors: i32) -> ^SDL_Palette																												#link_name "SDL_AllocPalette" ---;
	// sdl_alloc_rw 										:: proc() -> 																																		#link_name "SDL_AllocRW" ---;
	sdl_atomic_add 										:: proc(a: ^SDL_Atomic, v: i32) -> i32																												#link_name "SDL_AtomicAdd" ---;
	sdl_atomic_cas 										:: proc(a: ^SDL_Atomic, oldval: i32, newval: i32) -> SDL_Bool																							#link_name "SDL_AtomicCAS" ---;
	sdl_atomic_cas_ptr 									:: proc(a: ^rawptr, oldval: rawptr, newval: rawptr) -> SDL_Bool																							#link_name "SDL_AtomicCASPtr" ---;
	sdl_atomic_get 										:: proc(a: ^SDL_Atomic) -> i32																														#link_name "SDL_AtomicGet" ---;
	sdl_atomic_get_ptr 									:: proc(a: ^rawptr) -> rawptr																														#link_name "SDL_AtomicGetPtr" ---;
	sdl_atomic_lock 									:: proc(lock: ^SDL_Spin_Lock)																																	#link_name "SDL_AtomicLock" ---;
	sdl_atomic_set 										:: proc(a: ^SDL_Atomic, v: i32) -> i32																												#link_name "SDL_AtomicSet" ---;
	sdl_atomic_set_ptr 									:: proc(a: ^rawptr, v: rawptr) -> rawptr																											#link_name "SDL_AtomicSetPtr" ---;
	sdl_atomic_try_lock 								:: proc(lock: ^SDL_Spin_Lock) -> SDL_Bool																															#link_name "SDL_AtomicTryLock" ---;
	sdl_atomic_unlock 									:: proc(lock: ^SDL_Spin_Lock)																																	#link_name "SDL_AtomicUnlock" ---;
	sdl_audio_init 										:: proc(driver_name: ^u8) -> i32																																	#link_name "SDL_AudioInit" ---;
	sdl_audio_quit 										:: proc()																																		#link_name "SDL_AudioQuit" ---;
	sdl_build_audio_cvt 								:: proc(cvt: ^SDL_AudioCVT, src_format: SDL_AudioFormat, src_channels: u8, src_rate: i32, dst_format: SDL_AudioFormat, dst_channels: u8, dst_rate: i32) -> i32																																		#link_name "SDL_BuildAudioCVT" ---;
	sdl_calculate_gamma_ramp 							:: proc(gamma: f32, ramp: *u16)																																		#link_name "SDL_CalculateGammaRamp" ---;
	sdl_capture_mouse 									:: proc(enabled: SDL_Bool) -> i32																																		#link_name "SDL_CaptureMouse" ---;
	sdl_clear_error 									:: proc()																																		#link_name "SDL_ClearError" ---;
	sdl_clear_hints 									:: proc()																																		#link_name "SDL_ClearHints" ---;
	sdl_clear_queued_audio 								:: proc(dev: SDL_Audio_Device)																																		#link_name "SDL_ClearQueuedAudio" ---;
	sdl_close_audio 									:: proc() ->																																		#link_name "SDL_CloseAudio" ---;
	sdl_close_audio_device 								:: proc(dev: SDL_Audio_Device)																																		#link_name "SDL_CloseAudioDevice" ---;
	sdl_cond_broadcast 									:: proc(cond: ^SDL_Cond) -> i32																																		#link_name "SDL_CondBroadcast" ---;
	sdl_cond_signal 									:: proc(cond: ^SDL_Cond) -> i32																																		#link_name "SDL_CondSignal" ---;
	sdl_cond_wait 										:: proc(cond: ^SDL_Cond, mutex: ^SDL_Mutex) -> i32																																		#link_name "SDL_CondWait" ---;
	sdl_cond_wait_timeout 								:: proc(cond: ^SDL_Cond, mutex: ^SDL_Mutex, ms: u32) -> i32																																		#link_name "SDL_CondWaitTimeout" ---;
	sdl_convert_audio 									:: proc(cvt: ^SDL_AudioCVT) -> i32																																		#link_name "SDL_ConvertAudio" ---;
	sdl_convert_pixels 									:: proc(width: i32, height: i32, src_format: u32, src: rawptr, src_pitch: i32, dst_format: u32, dst: rawptr, dst_pitch: i32) -> i32																																		#link_name "SDL_ConvertPixels" ---;
	sdl_convert_surface 								:: proc(src: ^SDL_Surface, fmt: ^SDL_Pixel_Format, flags: u32) -> ^SDL_Surface																																		#link_name "SDL_ConvertSurface" ---;
	sdl_convert_surface_format 							:: proc(src: ^SDL_Surface, pixel_format: u32, flags: u32) -> ^SDL_Surface																																		#link_name "SDL_ConvertSurfaceFormat" ---;
	sdl_create_color_cursor 							:: proc(surface: ^SDL_Surface, hot_x, hot_y, i32) -> ^SDL_Cursor																																		#link_name "SDL_CreateColorCursor" ---;
	sdl_create_cond 									:: proc() -> ^SDL_Cond																																		#link_name "SDL_CreateCond" ---;
	sdl_create_cursor 									:: proc(data: ^u8, mask: ^u8, w, h: i32, hot_x, hot_y: i32) -> ^SDL_Cursor																																		#link_name "SDL_CreateCursor" ---;
	sdl_create_mutex 									:: proc() -> ^SDL_Mutex																																		#link_name "SDL_CreateMutex" ---;
	sdl_create_rgb_surface 								:: proc(flags: u32, width, height, depth: i32, Rmask, Gmask, Bmask, Amask: u32) -> ^SDL_Surface																																		#link_name "SDL_CreateRGBSurface" ---;
	sdl_create_rgb_surface_from 						:: proc(pixels: rawptr, width, height, depth, pitch: i32, Rmask, Gmask, Bmask, Amask: u32) -> ^SDL_Surface																																		#link_name "SDL_CreateRGBSurfaceFrom" ---;
	sdl_create_rgb_surface_with_format 					:: proc(flags: u32, width, height, depth: i32, format: u32) -> ^SDL_Surface																																		#link_name "SDL_CreateRGBSurfaceWithFormat" ---;
	sdl_create_rgb_surface_with_format_from 			:: proc(pixels: rawptr, width, height, depth, pitch: i32, format: u32) -> ^SDL_Surface																																		#link_name "SDL_CreateRGBSurfaceWithFormatFrom" ---;
	sdl_create_renderer 								:: proc(window: ^SDL_Window, index: i32, flags, u32) -> ^SDL_Renderer																																	#link_name "SDL_CreateRenderer" ---;
	sdl_create_semaphore 								:: proc(initial_value: u32) -> ^SDL_Sem																																		#link_name "SDL_CreateSemaphore" ---;
	sdl_create_shaped_window 							:: proc(title: ^u8, x, y, w, h: u32, flags: u32) -> ^SDL_Window																																	#link_name "SDL_CreateShapedWindow" ---;
	sdl_create_software_renderer 						:: proc(surface: ^SDL_Surface) -> ^SDL_renderer																																		#link_name "SDL_CreateSoftwareRenderer" ---;
	sdl_create_system_cursor 							:: proc(id: SDL_SystemCursor) -> ^SDL_Cursor																																		#link_name "SDL_CreateSystemCursor" ---;
	sdl_create_texture 									:: proc(renderer: ^SDL_Renderer, format: u32, access: i32, w, h: i32) -> ^SDL_Texture																																		#link_name "SDL_CreateTexture" ---;
	sdl_create_texture_from_surface 					:: proc(renderer: ^SDL_Renderer, surface: ^SDL_Surface) -> ^SDL_Texture																																		#link_name "SDL_CreateTextureFromSurface" ---;
	sdl_create_thread 									:: proc(fn: SDL_ThreadFunction, name: ^u8, data: rawptr, pfnBeginThread: pfnSDL_CurrentBeginThread, pfnEndThread: pfnSDL_CurrentEndThread) -> ^SDL_Thread 							#link_name "SDL_CreateThread" ---;
	sdl_create_window 									:: proc(title: ^u8, x, y, w, h: i32, flags: u32) -> ^SDL_Window																																		#link_name "SDL_CreateWindow" ---;
	sdl_create_window_and_renderer 						:: proc(width, height: i32, window_flags: u32, window, ^^SDL_Window, renderer: ^^SDL_Renderer) -> i32																																		#link_name "SDL_CreateWindowAndRenderer" ---;
	sdl_create_window_from 								:: proc(data: rawptr) -> ^SDL_Window																																		#link_name "SDL_CreateWindowFrom" ---;
	sdl_dxgi_get_output_info 							:: proc(display_index: i32, adapter_index: ^i32, output_index: ^i32) -> SDL_Bool																																		#link_name "SDL_DXGIGetOutputInfo" ---;
	// sdl_dynapi_entry 									:: proc() ->																																		#link_name "SDL_DYNAPI_entry" ---;
	sdl_del_event_watch 								:: proc(filter: SDL_Event_Filter, userdata: rawptr)																																		#link_name "SDL_DelEventWatch" ---;
	sdl_del_hint_callback 								:: proc(name: ^u8, callback: SDL_Hint_Callback, userdata: rawptr)																																		#link_name "SDL_DelHintCallback" ---;
	sdl_delay 											:: proc(ms: u32)																																		#link_name "SDL_Delay" ---;
	sdl_dequeue_audio 									:: proc(dev: SDL_Audio_Device_Id, data: rawptr, len u32) -> u32																																		#link_name "SDL_DequeueAudio" ---;
	sdl_destroy_cond 									:: proc(cond: ^SDL_Cond)																																		#link_name "SDL_DestroyCond" ---;
	sdl_destroy_mutex 									:: proc(mutex: ^SDL_Mutex)																																		#link_name "SDL_DestroyMutex" ---;
	sdl_destroy_renderer 								:: proc(renderer: ^SDL_Renderer)																																		#link_name "SDL_DestroyRenderer" ---;
	sdl_destroy_semaphore 								:: proc(sem: ^SDL_Sem)																																		#link_name "SDL_DestroySemaphore" ---;
	sdl_destroy_texture 								:: proc(texture: ^SDL_Texture)																																		#link_name "SDL_DestroyTexture" ---;
	sdl_destroy_window 									:: proc(window: ^SDL_Window)																																		#link_name "SDL_DestroyWindow" ---;
	sdl_detach_thread 									:: proc(thread: ^SDL_Thread)																																		#link_name "SDL_DetachThread" ---;
	sdl_direct_3d9_get_adapter_index 					:: proc(display_index: i32) -> i32																																		#link_name "SDL_Direct3D9GetAdapterIndex" ---;
	sdl_disable_screen_saver 							:: proc()																																		#link_name "SDL_DisableScreenSaver" ---;
	sdl_enable_screen_saver 							:: proc()																																		#link_name "SDL_EnableScreenSaver" ---;
	sdl_enclose_points 									:: proc(points: ^SDL_Point, count: i32, clip: ^SDL_Rect, result: ^SDL_Rect) -> SDL_Bool																																		#link_name "SDL_EnclosePoints" ---;
	sdl_error 											:: proc(code: SDL_Error_Code) -> i32																																		#link_name "SDL_Error" ---;
	sdl_event_state 									:: proc(type: u32, state: i32) -> u8																																		#link_name "SDL_EventState" ---;
	sdl_fill_rect 										:: proc(dst: ^SDL_Surface, rect: ^SDL_Rect, color: u32) -> i32																																		#link_name "SDL_FillRect" ---;
	sdl_fill_rects 										:: proc(dst: ^SDL_Surface, rect: ^SDL_Rect, count: i32, color: u32) -> i32																																		#link_name "SDL_FillRects" ---;
	sdl_filter_events 									:: proc(filter: SDL_Event_Filter, userdata: rawptr)																																		#link_name "SDL_FilterEvents" ---;
	sdl_flush_event 									:: proc(type: u32)																																		#link_name "SDL_FlushEvent" ---;
	sdl_flush_events 									:: proc(min_type: u32, max_type: u32)																																		#link_name "SDL_FlushEvents" ---;
	sdl_free_cursor 									:: proc(cursor: ^SDL_Cursor)																																		#link_name "SDL_FreeCursor" ---;
	sdl_free_format 									:: proc(format: ^SDL_Pixel_Format)																																		#link_name "SDL_FreeFormat" ---;
	sdl_free_palette 									:: proc(palette: *SDL_Palette)																																		#link_name "SDL_FreePalette" ---;
	// sdl_free_rw 										:: proc() ->																																		#link_name "SDL_FreeRW" ---;
	sdl_free_surface 									:: proc(surface: ^SDL_Surface)																																		#link_name "SDL_FreeSurface" ---;
	sdl_free_wav 										:: proc(audio_buf: ^u8)																																		#link_name "SDL_FreeWAV" ---;
	/*
	sdl_gl_bind_texture 								:: proc() ->																																		#link_name "SDL_GL_BindTexture" ---;
	sdl_gl_create_context 								:: proc() ->																																		#link_name "SDL_GL_CreateContext" ---;
	sdl_gl_delete_context 								:: proc() ->																																		#link_name "SDL_GL_DeleteContext" ---;
	sdl_gl_extension_supported 							:: proc() ->																																		#link_name "SDL_GL_ExtensionSupported" ---;
	sdl_gl_get_attribute 								:: proc() ->																																		#link_name "SDL_GL_GetAttribute" ---;
	sdl_gl_get_current_context 							:: proc() ->																																		#link_name "SDL_GL_GetCurrentContext" ---;
	sdl_gl_get_current_window 							:: proc() ->																																		#link_name "SDL_GL_GetCurrentWindow" ---;
	sdl_gl_get_drawable_size 							:: proc() ->																																		#link_name "SDL_GL_GetDrawableSize" ---;
	sdl_gl_get_proc_address 							:: proc() ->																																		#link_name "SDL_GL_GetProcAddress" ---;
	sdl_gl_get_swap_interval 							:: proc() ->																																		#link_name "SDL_GL_GetSwapInterval" ---;
	sdl_gl_load_library 								:: proc() ->																																		#link_name "SDL_GL_LoadLibrary" ---;
	sdl_gl_make_current 								:: proc() ->																																		#link_name "SDL_GL_MakeCurrent" ---;
	sdl_gl_reset_attributes 							:: proc() ->																																		#link_name "SDL_GL_ResetAttributes" ---;
	sdl_gl_set_attribute 								:: proc() ->																																		#link_name "SDL_GL_SetAttribute" ---;
	sdl_gl_set_swap_interval 							:: proc() ->																																		#link_name "SDL_GL_SetSwapInterval" ---;
	sdl_gl_swap_window 									:: proc() ->																																		#link_name "SDL_GL_SwapWindow" ---;
	sdl_gl_unbind_texture 								:: proc() ->																																		#link_name "SDL_GL_UnbindTexture" ---;
	sdl_gl_unload_library 								:: proc() ->																																		#link_name "SDL_GL_UnloadLibrary" ---;
	sdl_game_controller_add_mapping 					:: proc() ->																																		#link_name "SDL_GameControllerAddMapping" ---;
	sdl_game_controller_add_mappings_from_rw 			:: proc() ->																																		#link_name "SDL_GameControllerAddMappingsFromRW" ---;
	sdl_game_controller_close 							:: proc() ->																																		#link_name "SDL_GameControllerClose" ---;
	sdl_game_controller_event_state 					:: proc() ->																																		#link_name "SDL_GameControllerEventState" ---;
	sdl_game_controller_from_instance_id 				:: proc() ->																																		#link_name "SDL_GameControllerFromInstanceID" ---;
	sdl_game_controller_get_attached 					:: proc() ->																																		#link_name "SDL_GameControllerGetAttached" ---;
	sdl_game_controller_get_axis 						:: proc() ->																																		#link_name "SDL_GameControllerGetAxis" ---;
	sdl_game_controller_get_axis_from_string 			:: proc() ->																																		#link_name "SDL_GameControllerGetAxisFromString" ---;
	sdl_game_controller_get_bind_for_axis 				:: proc() ->																																		#link_name "SDL_GameControllerGetBindForAxis" ---;
	sdl_game_controller_get_bind_for_button 			:: proc() ->																																		#link_name "SDL_GameControllerGetBindForButton" ---;
	sdl_game_controller_get_button 						:: proc() ->																																		#link_name "SDL_GameControllerGetButton" ---;
	sdl_game_controller_get_button_from_string 			:: proc() ->																																		#link_name "SDL_GameControllerGetButtonFromString" ---;
	sdl_game_controller_get_joystick 					:: proc() ->																																		#link_name "SDL_GameControllerGetJoystick" ---;
	sdl_game_controller_get_string_for_axis 			:: proc() ->																																		#link_name "SDL_GameControllerGetStringForAxis" ---;
	sdl_game_controller_get_string_for_button 			:: proc() ->																																		#link_name "SDL_GameControllerGetStringForButton" ---;
	sdl_game_controller_mapping 						:: proc() ->																																		#link_name "SDL_GameControllerMapping" ---;
	sdl_game_controller_mapping_for_guid 				:: proc() ->																																		#link_name "SDL_GameControllerMappingForGUID" ---;
	sdl_game_controller_name 							:: proc() ->																																		#link_name "SDL_GameControllerName" ---;
	sdl_game_controller_name_for_index 					:: proc() ->																																		#link_name "SDL_GameControllerNameForIndex" ---;
	sdl_game_controller_open 							:: proc() ->																																		#link_name "SDL_GameControllerOpen" ---;
	sdl_game_controller_update 							:: proc() ->																																		#link_name "SDL_GameControllerUpdate" ---;
	sdl_get_assertion_handler 							:: proc() ->																																		#link_name "SDL_GetAssertionHandler" ---;
	sdl_get_assertion_report 							:: proc() ->																																		#link_name "SDL_GetAssertionReport" ---;
	sdl_get_audio_device_name 							:: proc() ->																																		#link_name "SDL_GetAudioDeviceName" ---;
	sdl_get_audio_device_status 						:: proc() ->																																		#link_name "SDL_GetAudioDeviceStatus" ---;
	sdl_get_audio_driver 								:: proc() ->																																		#link_name "SDL_GetAudioDriver" ---;
	sdl_get_audio_status 								:: proc() ->																																		#link_name "SDL_GetAudioStatus" ---;
	sdl_get_base_path 									:: proc() ->																																		#link_name "SDL_GetBasePath" ---;
	sdl_get_cpu_cache_line_size 						:: proc() ->																																		#link_name "SDL_GetCPUCacheLineSize" ---;
	sdl_get_cpu_count 									:: proc() ->																																		#link_name "SDL_GetCPUCount" ---;
	sdl_get_clip_rect 									:: proc() ->																																		#link_name "SDL_GetClipRect" ---;
	sdl_get_clipboard_text 								:: proc() ->																																		#link_name "SDL_GetClipboardText" ---;
	sdl_get_closest_display_mode 						:: proc() ->																																		#link_name "SDL_GetClosestDisplayMode" ---;
	sdl_get_color_key 									:: proc() ->																																		#link_name "SDL_GetColorKey" ---;
	sdl_get_current_audio_driver 						:: proc() ->																																		#link_name "SDL_GetCurrentAudioDriver" ---;
	sdl_get_current_display_mode 						:: proc() ->																																		#link_name "SDL_GetCurrentDisplayMode" ---;
	sdl_get_current_video_driver 						:: proc() ->																																		#link_name "SDL_GetCurrentVideoDriver" ---;
	sdl_get_cursor 										:: proc() ->																																		#link_name "SDL_GetCursor" ---;
	sdl_get_default_assertion_handler 					:: proc() ->																																		#link_name "SDL_GetDefaultAssertionHandler" ---;
	sdl_get_default_cursor 								:: proc() ->																																		#link_name "SDL_GetDefaultCursor" ---;
	sdl_get_desktop_display_mode 						:: proc() ->																																		#link_name "SDL_GetDesktopDisplayMode" ---;
	sdl_get_display_bounds 								:: proc() ->																																		#link_name "SDL_GetDisplayBounds" ---;
	sdl_get_display_dpi 								:: proc() ->																																		#link_name "SDL_GetDisplayDPI" ---;
	sdl_get_display_mode 								:: proc() ->																																		#link_name "SDL_GetDisplayMode" ---;
	sdl_get_display_name 								:: proc() ->																																		#link_name "SDL_GetDisplayName" ---;
	sdl_get_display_usable_bounds 						:: proc() ->																																		#link_name "SDL_GetDisplayUsableBounds" ---;
	sdl_get_error 										:: proc() ->																																		#link_name "SDL_GetError" ---;
	sdl_get_event_filter 								:: proc() ->																																		#link_name "SDL_GetEventFilter" ---;
	sdl_get_global_mouse_state 							:: proc() ->																																		#link_name "SDL_GetGlobalMouseState" ---;
	sdl_get_grabbed_window 								:: proc() ->																																		#link_name "SDL_GetGrabbedWindow" ---;
	sdl_get_hint 										:: proc() ->																																		#link_name "SDL_GetHint" ---;
	sdl_get_hint_boolean 								:: proc() ->																																		#link_name "SDL_GetHintBoolean" ---;
	sdl_get_key_from_name 								:: proc() ->																																		#link_name "SDL_GetKeyFromName" ---;
	sdl_get_key_from_scancode 							:: proc() ->																																		#link_name "SDL_GetKeyFromScancode" ---;
	sdl_get_key_name 									:: proc() ->																																		#link_name "SDL_GetKeyName" ---;
	sdl_get_keyboard_focus 								:: proc() ->																																		#link_name "SDL_GetKeyboardFocus" ---;
	sdl_get_keyboard_state 								:: proc() ->																																		#link_name "SDL_GetKeyboardState" ---;
	sdl_get_mod_state 									:: proc() ->																																		#link_name "SDL_GetModState" ---;
	sdl_get_mouse_focus 								:: proc() ->																																		#link_name "SDL_GetMouseFocus" ---;
	sdl_get_mouse_state 								:: proc() ->																																		#link_name "SDL_GetMouseState" ---;
	sdl_get_num_audio_devices 							:: proc() ->																																		#link_name "SDL_GetNumAudioDevices" ---;
	sdl_get_num_audio_drivers 							:: proc() ->																																		#link_name "SDL_GetNumAudioDrivers" ---;
	sdl_get_num_display_modes 							:: proc() ->																																		#link_name "SDL_GetNumDisplayModes" ---;
	sdl_get_num_render_drivers 							:: proc() ->																																		#link_name "SDL_GetNumRenderDrivers" ---;
	sdl_get_num_touch_devices 							:: proc() ->																																		#link_name "SDL_GetNumTouchDevices" ---;
	sdl_get_num_touch_fingers 							:: proc() ->																																		#link_name "SDL_GetNumTouchFingers" ---;
	sdl_get_num_video_displays 							:: proc() ->																																		#link_name "SDL_GetNumVideoDisplays" ---;
	sdl_get_num_video_drivers 							:: proc() ->																																		#link_name "SDL_GetNumVideoDrivers" ---;
	sdl_get_performance_counter 						:: proc() ->																																		#link_name "SDL_GetPerformanceCounter" ---;
	sdl_get_performance_frequency 						:: proc() ->																																		#link_name "SDL_GetPerformanceFrequency" ---;
	sdl_get_pixel_format_name 							:: proc() ->																																		#link_name "SDL_GetPixelFormatName" ---;
	sdl_get_platform 									:: proc() ->																																		#link_name "SDL_GetPlatform" ---;
	sdl_get_power_info 									:: proc() ->																																		#link_name "SDL_GetPowerInfo" ---;
	sdl_get_pref_path 									:: proc() ->																																		#link_name "SDL_GetPrefPath" ---;
	sdl_get_queued_audio_size 							:: proc() ->																																		#link_name "SDL_GetQueuedAudioSize" ---;
	sdl_get_rgb 										:: proc() ->																																		#link_name "SDL_GetRGB" ---;
	sdl_get_rgba 										:: proc() ->																																		#link_name "SDL_GetRGBA" ---;
	sdl_get_relative_mouse_mode 						:: proc() ->																																		#link_name "SDL_GetRelativeMouseMode" ---;
	sdl_get_relative_mouse_state 						:: proc() ->																																		#link_name "SDL_GetRelativeMouseState" ---;
	sdl_get_render_draw_blend_mode 						:: proc() ->																																		#link_name "SDL_GetRenderDrawBlendMode" ---;
	sdl_get_render_draw_color 							:: proc() ->																																		#link_name "SDL_GetRenderDrawColor" ---;
	sdl_get_render_driver_info 							:: proc() ->																																		#link_name "SDL_GetRenderDriverInfo" ---;
	sdl_get_render_target 								:: proc() ->																																		#link_name "SDL_GetRenderTarget" ---;
	sdl_get_renderer 									:: proc() ->																																		#link_name "SDL_GetRenderer" ---;
	sdl_get_renderer_info 								:: proc() ->																																		#link_name "SDL_GetRendererInfo" ---;
	sdl_get_renderer_output_size 						:: proc() ->																																		#link_name "SDL_GetRendererOutputSize" ---;
	sdl_get_revision 									:: proc() ->																																		#link_name "SDL_GetRevision" ---;
	sdl_get_revision_number 							:: proc() ->																																		#link_name "SDL_GetRevisionNumber" ---;
	sdl_get_scancode_from_key 							:: proc() ->																																		#link_name "SDL_GetScancodeFromKey" ---;
	sdl_get_scancode_from_name 							:: proc() ->																																		#link_name "SDL_GetScancodeFromName" ---;
	sdl_get_scancode_name 								:: proc() ->																																		#link_name "SDL_GetScancodeName" ---;
	sdl_get_shaped_window_mode 							:: proc() ->																																		#link_name "SDL_GetShapedWindowMode" ---;
	sdl_get_surface_alpha_mod 							:: proc() ->																																		#link_name "SDL_GetSurfaceAlphaMod" ---;
	sdl_get_surface_blend_mode 							:: proc() ->																																		#link_name "SDL_GetSurfaceBlendMode" ---;
	sdl_get_surface_color_mod 							:: proc() ->																																		#link_name "SDL_GetSurfaceColorMod" ---;
	sdl_get_system_ram 									:: proc() ->																																		#link_name "SDL_GetSystemRAM" ---;
	sdl_get_texture_alpha_mod 							:: proc() ->																																		#link_name "SDL_GetTextureAlphaMod" ---;
	sdl_get_texture_blend_mode 							:: proc() ->																																		#link_name "SDL_GetTextureBlendMode" ---;
	sdl_get_texture_color_mod 							:: proc() ->																																		#link_name "SDL_GetTextureColorMod" ---;
	sdl_get_thread_id 									:: proc() ->																																		#link_name "SDL_GetThreadID" ---;
	sdl_get_thread_name 								:: proc() ->																																		#link_name "SDL_GetThreadName" ---;
	sdl_get_ticks 										:: proc() ->																																		#link_name "SDL_GetTicks" ---;
	sdl_get_touch_device 								:: proc() ->																																		#link_name "SDL_GetTouchDevice" ---;
	sdl_get_touch_finger 								:: proc() ->																																		#link_name "SDL_GetTouchFinger" ---;
	sdl_get_version 									:: proc() ->																																		#link_name "SDL_GetVersion" ---;
	sdl_get_video_driver 								:: proc() ->																																		#link_name "SDL_GetVideoDriver" ---;
	sdl_get_window_borders_size 						:: proc() ->																																		#link_name "SDL_GetWindowBordersSize" ---;
	sdl_get_window_brightness 							:: proc() ->																																		#link_name "SDL_GetWindowBrightness" ---;
	sdl_get_window_data 								:: proc() ->																																		#link_name "SDL_GetWindowData" ---;
	sdl_get_window_display_index 						:: proc() ->																																		#link_name "SDL_GetWindowDisplayIndex" ---;
	sdl_get_window_display_mode 						:: proc() ->																																		#link_name "SDL_GetWindowDisplayMode" ---;
	sdl_get_window_flags 								:: proc() ->																																		#link_name "SDL_GetWindowFlags" ---;
	sdl_get_window_fromid 								:: proc() ->																																		#link_name "SDL_GetWindowFromID" ---;
	sdl_get_window_gammaramp 							:: proc() ->																																		#link_name "SDL_GetWindowGammaRamp" ---;
	sdl_get_window_grab 								:: proc() ->																																		#link_name "SDL_GetWindowGrab" ---;
	sdl_get_window_id 									:: proc() ->																																		#link_name "SDL_GetWindowID" ---;
	sdl_get_window_maximum_size 						:: proc() ->																																		#link_name "SDL_GetWindowMaximumSize" ---;
	sdl_get_window_minimum_size 						:: proc() ->																																		#link_name "SDL_GetWindowMinimumSize" ---;
	sdl_get_window_opacity 								:: proc() ->																																		#link_name "SDL_GetWindowOpacity" ---;
	sdl_get_window_pixel_format 						:: proc() ->																																		#link_name "SDL_GetWindowPixelFormat" ---;
	sdl_get_window_position 							:: proc() ->																																		#link_name "SDL_GetWindowPosition" ---;
	sdl_get_window_size 								:: proc() ->																																		#link_name "SDL_GetWindowSize" ---;
	sdl_get_window_surface 								:: proc() ->																																		#link_name "SDL_GetWindowSurface" ---;
	sdl_get_window_title 								:: proc() ->																																		#link_name "SDL_GetWindowTitle" ---;
	sdl_get_window_wm_info 								:: proc() ->																																		#link_name "SDL_GetWindowWMInfo" ---;
	sdl_haptic_close 									:: proc() ->																																		#link_name "SDL_HapticClose" ---;
	sdl_haptic_destroy_effect 							:: proc() ->																																		#link_name "SDL_HapticDestroyEffect" ---;
	sdl_haptic_effect_supported 						:: proc() ->																																		#link_name "SDL_HapticEffectSupported" ---;
	sdl_haptic_get_effect_status 						:: proc() ->																																		#link_name "SDL_HapticGetEffectStatus" ---;
	sdl_haptic_index 									:: proc() ->																																		#link_name "SDL_HapticIndex" ---;
	sdl_haptic_name 									:: proc() ->																																		#link_name "SDL_HapticName" ---;
	sdl_haptic_new_effect 								:: proc() ->																																		#link_name "SDL_HapticNewEffect" ---;
	sdl_haptic_num_axes 								:: proc() ->																																		#link_name "SDL_HapticNumAxes" ---;
	sdl_haptic_num_effects 								:: proc() ->																																		#link_name "SDL_HapticNumEffects" ---;
	sdl_haptic_num_effects_playing 						:: proc() ->																																		#link_name "SDL_HapticNumEffectsPlaying" ---;
	sdl_haptic_open 									:: proc() ->																																		#link_name "SDL_HapticOpen" ---;
	sdl_haptic_open_from_joystick 						:: proc() ->																																		#link_name "SDL_HapticOpenFromJoystick" ---;
	sdl_haptic_open_from_mouse 							:: proc() ->																																		#link_name "SDL_HapticOpenFromMouse" ---;
	sdl_haptic_opened 									:: proc() ->																																		#link_name "SDL_HapticOpened" ---;
	sdl_haptic_pause 									:: proc() ->																																		#link_name "SDL_HapticPause" ---;
	sdl_haptic_query 									:: proc() ->																																		#link_name "SDL_HapticQuery" ---;
	sdl_haptic_rumble_init 								:: proc() ->																																		#link_name "SDL_HapticRumbleInit" ---;
	sdl_haptic_rumble_play 								:: proc() ->																																		#link_name "SDL_HapticRumblePlay" ---;
	sdl_haptic_rumble_stop 								:: proc() ->																																		#link_name "SDL_HapticRumbleStop" ---;
	sdl_haptic_rumble_supported 						:: proc() ->																																		#link_name "SDL_HapticRumbleSupported" ---;
	sdl_haptic_run_effect 								:: proc() ->																																		#link_name "SDL_HapticRunEffect" ---;
	sdl_haptic_set_autocenter 							:: proc() ->																																		#link_name "SDL_HapticSetAutocenter" ---;
	sdl_haptic_set_gain 								:: proc() ->																																		#link_name "SDL_HapticSetGain" ---;
	sdl_haptic_stop_all 								:: proc() ->																																		#link_name "SDL_HapticStopAll" ---;
	sdl_haptic_stop_effect 								:: proc() ->																																		#link_name "SDL_HapticStopEffect" ---;
	sdl_haptic_unpause 									:: proc() ->																																		#link_name "SDL_HapticUnpause" ---;
	sdl_haptic_update_effect 							:: proc() ->																																		#link_name "SDL_HapticUpdateEffect" ---;
	sdl_has_3d_now 										:: proc() ->																																		#link_name "SDL_Has3DNow" ---;
	sdl_has_avx 										:: proc() ->																																		#link_name "SDL_HasAVX" ---;
	sdl_has_avx2 										:: proc() ->																																		#link_name "SDL_HasAVX2" ---;
	sdl_has_alti_vec 									:: proc() ->																																		#link_name "SDL_HasAltiVec" ---;
	sdl_has_clipboard_text 								:: proc() ->																																		#link_name "SDL_HasClipboardText" ---;
	sdl_has_event 										:: proc() ->																																		#link_name "SDL_HasEvent" ---;
	sdl_has_events 										:: proc() ->																																		#link_name "SDL_HasEvents" ---;
	sdl_has_intersection 								:: proc() ->																																		#link_name "SDL_HasIntersection" ---;
	sdl_has_mmx 										:: proc() ->																																		#link_name "SDL_HasMMX" ---;
	sdl_has_rdtsc 										:: proc() ->																																		#link_name "SDL_HasRDTSC" ---;
	sdl_has_sse 										:: proc() ->																																		#link_name "SDL_HasSSE" ---;
	sdl_has_sse2 										:: proc() ->																																		#link_name "SDL_HasSSE2" ---;
	sdl_has_sse3 										:: proc() ->																																		#link_name "SDL_HasSSE3" ---;
	sdl_has_sse41 										:: proc() ->																																		#link_name "SDL_HasSSE41" ---;
	sdl_has_sse42 										:: proc() ->																																		#link_name "SDL_HasSSE42" ---;
	sdl_has_screen_keyboard_support 					:: proc() ->																																		#link_name "SDL_HasScreenKeyboardSupport" ---;
	sdl_hide_window 									:: proc() ->																																		#link_name "SDL_HideWindow" ---;
	sdl_init 											:: proc() ->																																		#link_name "SDL_Init" ---;
	sdl_init_sub_system 								:: proc() ->																																		#link_name "SDL_InitSubSystem" ---;
	sdl_intersect_rect 									:: proc() ->																																		#link_name "SDL_IntersectRect" ---;
	sdl_intersect_rect_and_line 						:: proc() ->																																		#link_name "SDL_IntersectRectAndLine" ---;
	sdl_is_game_controller 								:: proc() ->																																		#link_name "SDL_IsGameController" ---;
	sdl_is_screen_keyboard_shown 						:: proc() ->																																		#link_name "SDL_IsScreenKeyboardShown" ---;
	sdl_is_screen_saver_enabled 						:: proc() ->																																		#link_name "SDL_IsScreenSaverEnabled" ---;
	sdl_is_shaped_window 								:: proc() ->																																		#link_name "SDL_IsShapedWindow" ---;
	sdl_is_text_input_active 							:: proc() ->																																		#link_name "SDL_IsTextInputActive" ---;
	sdl_joystick_close 									:: proc() ->																																		#link_name "SDL_JoystickClose" ---;
	sdl_joystick_current_power_level 					:: proc() ->																																		#link_name "SDL_JoystickCurrentPowerLevel" ---;
	sdl_joystick_event_state 							:: proc() ->																																		#link_name "SDL_JoystickEventState" ---;
	sdl_joystick_from_instance_id 						:: proc() ->																																		#link_name "SDL_JoystickFromInstanceID" ---;
	sdl_joystick_get_attached 							:: proc() ->																																		#link_name "SDL_JoystickGetAttached" ---;
	sdl_joystick_get_axis 								:: proc() ->																																		#link_name "SDL_JoystickGetAxis" ---;
	sdl_joystick_get_ball 								:: proc() ->																																		#link_name "SDL_JoystickGetBall" ---;
	sdl_joystick_get_button 							:: proc() ->																																		#link_name "SDL_JoystickGetButton" ---;
	sdl_joystick_get_device_guid 						:: proc() ->																																		#link_name "SDL_JoystickGetDeviceGUID" ---;
	sdl_joystick_get_guid 								:: proc() ->																																		#link_name "SDL_JoystickGetGUID" ---;
	sdl_joystick_get_guid_from_string 					:: proc() ->																																		#link_name "SDL_JoystickGetGUIDFromString" ---;
	sdl_joystick_get_guid_string 						:: proc() ->																																		#link_name "SDL_JoystickGetGUIDString" ---;
	sdl_joystick_get_hat 								:: proc() ->																																		#link_name "SDL_JoystickGetHat" ---;
	sdl_joystick_instance_id 							:: proc() ->																																		#link_name "SDL_JoystickInstanceID" ---;
	sdl_joystick_is_haptic 								:: proc() ->																																		#link_name "SDL_JoystickIsHaptic" ---;
	sdl_joystick_name 									:: proc() ->																																		#link_name "SDL_JoystickName" ---;
	sdl_joystick_name_for_index 						:: proc() ->																																		#link_name "SDL_JoystickNameForIndex" ---;
	sdl_joystick_num_axes 								:: proc() ->																																		#link_name "SDL_JoystickNumAxes" ---;
	sdl_joystick_num_balls 								:: proc() ->																																		#link_name "SDL_JoystickNumBalls" ---;
	sdl_joystick_num_buttons 							:: proc() ->																																		#link_name "SDL_JoystickNumButtons" ---;
	sdl_joystick_num_hats 								:: proc() ->																																		#link_name "SDL_JoystickNumHats" ---;
	sdl_joystick_open 									:: proc() ->																																		#link_name "SDL_JoystickOpen" ---;
	sdl_joystick_update 								:: proc() ->																																		#link_name "SDL_JoystickUpdate" ---;
	sdl_load_bmp_rw 									:: proc() ->																																		#link_name "SDL_LoadBMP_RW" ---;
	sdl_load_dollar_templates 							:: proc() ->																																		#link_name "SDL_LoadDollarTemplates" ---;
	sdl_load_function 									:: proc() ->																																		#link_name "SDL_LoadFunction" ---;
	sdl_load_object 									:: proc() ->																																		#link_name "SDL_LoadObject" ---;
	sdl_load_wav_rw 									:: proc() ->																																		#link_name "SDL_LoadWAV_RW" ---;
	sdl_lock_audio 										:: proc() ->																																		#link_name "SDL_LockAudio" ---;
	sdl_lock_audio_device 								:: proc() ->																																		#link_name "SDL_LockAudioDevice" ---;
	sdl_lock_mutex 										:: proc() ->																																		#link_name "SDL_LockMutex" ---;
	sdl_lock_surface 									:: proc() ->																																		#link_name "SDL_LockSurface" ---;
	sdl_lock_texture 									:: proc() ->																																		#link_name "SDL_LockTexture" ---;
	sdl_log 											:: proc() ->																																		#link_name "SDL_Log" ---;
	sdl_log_critical 									:: proc() ->																																		#link_name "SDL_LogCritical" ---;
	sdl_log_debug 										:: proc() ->																																		#link_name "SDL_LogDebug" ---;
	sdl_log_error 										:: proc() ->																																		#link_name "SDL_LogError" ---;
	sdl_log_get_output_function 						:: proc() ->																																		#link_name "SDL_LogGetOutputFunction" ---;
	sdl_log_get_priority 								:: proc() ->																																		#link_name "SDL_LogGetPriority" ---;
	sdl_log_info 										:: proc() ->																																		#link_name "SDL_LogInfo" ---;
	sdl_log_message 									:: proc() ->																																		#link_name "SDL_LogMessage" ---;
	sdl_log_message_v 									:: proc() ->																																		#link_name "SDL_LogMessageV" ---;
	sdl_log_reset_priorities 							:: proc() ->																																		#link_name "SDL_LogResetPriorities" ---;
	sdl_log_set_all_priority 							:: proc() ->																																		#link_name "SDL_LogSetAllPriority" ---;
	sdl_log_set_output_function 						:: proc() ->																																		#link_name "SDL_LogSetOutputFunction" ---;
	sdl_log_set_priority 								:: proc() ->																																		#link_name "SDL_LogSetPriority" ---;
	sdl_log_verbose 									:: proc() ->																																		#link_name "SDL_LogVerbose" ---;
	sdl_log_warn 										:: proc() ->																																		#link_name "SDL_LogWarn" ---;
	sdl_lower_blit 										:: proc() ->																																		#link_name "SDL_LowerBlit" ---;
	sdl_lower_blit_scaled 								:: proc() ->																																		#link_name "SDL_LowerBlitScaled" ---;
	sdl_map_rgb 										:: proc() ->																																		#link_name "SDL_MapRGB" ---;
	sdl_map_rgba 										:: proc() ->																																		#link_name "SDL_MapRGBA" ---;
	sdl_masks_to_pixel_format_enum 						:: proc() ->																																		#link_name "SDL_MasksToPixelFormatEnum" ---;
	sdl_maximize_window 								:: proc() ->																																		#link_name "SDL_MaximizeWindow" ---;
	sdl_minimize_window 								:: proc() ->																																		#link_name "SDL_MinimizeWindow" ---;
	sdl_mix_audio 										:: proc() ->																																		#link_name "SDL_MixAudio" ---;
	sdl_mix_audio_format 								:: proc() ->																																		#link_name "SDL_MixAudioFormat" ---;
	sdl_mouse_is_haptic 								:: proc() ->																																		#link_name "SDL_MouseIsHaptic" ---;
	sdl_num_haptics 									:: proc() ->																																		#link_name "SDL_NumHaptics" ---;
	sdl_num_joysticks 									:: proc() ->																																		#link_name "SDL_NumJoysticks" ---;
	sdl_open_audio 										:: proc() ->																																		#link_name "SDL_OpenAudio" ---;
	sdl_open_audio_device 								:: proc() ->																																		#link_name "SDL_OpenAudioDevice" ---;
	sdl_pause_audio 									:: proc() ->																																		#link_name "SDL_PauseAudio" ---;
	sdl_pause_audio_device 								:: proc() ->																																		#link_name "SDL_PauseAudioDevice" ---;
	sdl_peep_events 									:: proc() ->																																		#link_name "SDL_PeepEvents" ---;
	sdl_pixel_format_enum_to_masks 						:: proc() ->																																		#link_name "SDL_PixelFormatEnumToMasks" ---;
	sdl_poll_event 										:: proc() ->																																		#link_name "SDL_PollEvent" ---;
	sdl_pump_events 									:: proc() ->																																		#link_name "SDL_PumpEvents" ---;
	sdl_push_event 										:: proc() ->																																		#link_name "SDL_PushEvent" ---;
	sdl_query_texture 									:: proc() ->																																		#link_name "SDL_QueryTexture" ---;
	sdl_queue_audio 									:: proc() ->																																		#link_name "SDL_QueueAudio" ---;
	sdl_quit 											:: proc() ->																																		#link_name "SDL_Quit" ---;
	sdl_quit_sub_system 								:: proc() ->																																		#link_name "SDL_QuitSubSystem" ---;
	sdl_rw_from_const_mem 								:: proc() ->																																		#link_name "SDL_RWFromConstMem" ---;
	sdl_rw_from_fp 										:: proc() ->																																		#link_name "SDL_RWFromFP" ---;
	sdl_rw_from_file 									:: proc() ->																																		#link_name "SDL_RWFromFile" ---;
	sdl_rw_from_mem 									:: proc() ->																																		#link_name "SDL_RWFromMem" ---;
	sdl_raise_window 									:: proc() ->																																		#link_name "SDL_RaiseWindow" ---;
	sdl_read_be16 										:: proc() ->																																		#link_name "SDL_ReadBE16" ---;
	sdl_read_be32 										:: proc() ->																																		#link_name "SDL_ReadBE32" ---;
	sdl_read_be64 										:: proc() ->																																		#link_name "SDL_ReadBE64" ---;
	sdl_read_le16 										:: proc() ->																																		#link_name "SDL_ReadLE16" ---;
	sdl_read_le32 										:: proc() ->																																		#link_name "SDL_ReadLE32" ---;
	sdl_read_le64 										:: proc() ->																																		#link_name "SDL_ReadLE64" ---;
	sdl_read_u8 										:: proc() ->																																		#link_name "SDL_ReadU8" ---;
	sdl_record_gesture 									:: proc() ->																																		#link_name "SDL_RecordGesture" ---;
	sdl_register_app 									:: proc() ->																																		#link_name "SDL_RegisterApp" ---;
	sdl_register_events 								:: proc() ->																																		#link_name "SDL_RegisterEvents" ---;
	sdl_remove_timer 									:: proc() ->																																		#link_name "SDL_RemoveTimer" ---;
	sdl_render_clear 									:: proc() ->																																		#link_name "SDL_RenderClear" ---;
	sdl_render_copy 									:: proc() ->																																		#link_name "SDL_RenderCopy" ---;
	sdl_render_copy_ex 									:: proc() ->																																		#link_name "SDL_RenderCopyEx" ---;
	sdl_render_draw_line 								:: proc() ->																																		#link_name "SDL_RenderDrawLine" ---;
	sdl_render_draw_lines 								:: proc() ->																																		#link_name "SDL_RenderDrawLines" ---;
	sdl_render_draw_point 								:: proc() ->																																		#link_name "SDL_RenderDrawPoint" ---;
	sdl_render_draw_points 								:: proc() ->																																		#link_name "SDL_RenderDrawPoints" ---;
	sdl_render_draw_rect 								:: proc() ->																																		#link_name "SDL_RenderDrawRect" ---;
	sdl_render_draw_rects 								:: proc() ->																																		#link_name "SDL_RenderDrawRects" ---;
	sdl_render_fill_rect 								:: proc() ->																																		#link_name "SDL_RenderFillRect" ---;
	sdl_render_fill_rects 								:: proc() ->																																		#link_name "SDL_RenderFillRects" ---;
	sdl_render_get_clip_rect 							:: proc() ->																																		#link_name "SDL_RenderGetClipRect" ---;
	sdl_render_get_d3d9_device 							:: proc() ->																																		#link_name "SDL_RenderGetD3D9Device" ---;
	sdl_render_get_integer_scale 						:: proc() ->																																		#link_name "SDL_RenderGetIntegerScale" ---;
	sdl_render_get_logical_size 						:: proc() ->																																		#link_name "SDL_RenderGetLogicalSize" ---;
	sdl_render_get_scale 								:: proc() ->																																		#link_name "SDL_RenderGetScale" ---;
	sdl_render_get_viewport 							:: proc() ->																																		#link_name "SDL_RenderGetViewport" ---;
	sdl_render_is_clip_enabled 							:: proc() ->																																		#link_name "SDL_RenderIsClipEnabled" ---;
	sdl_render_present 									:: proc() ->																																		#link_name "SDL_RenderPresent" ---;
	sdl_render_read_pixels 								:: proc() ->																																		#link_name "SDL_RenderReadPixels" ---;
	sdl_render_set_clip_rect 							:: proc() ->																																		#link_name "SDL_RenderSetClipRect" ---;
	sdl_render_set_integer_scale 						:: proc() ->																																		#link_name "SDL_RenderSetIntegerScale" ---;
	sdl_render_set_logical_size 						:: proc() ->																																		#link_name "SDL_RenderSetLogicalSize" ---;
	sdl_render_set_scale 								:: proc() ->																																		#link_name "SDL_RenderSetScale" ---;
	sdl_render_set_viewport 							:: proc() ->																																		#link_name "SDL_RenderSetViewport" ---;
	sdl_render_target_supported 						:: proc() ->																																		#link_name "SDL_RenderTargetSupported" ---;
	sdl_report_assertion 								:: proc() ->																																		#link_name "SDL_ReportAssertion" ---;
	sdl_reset_assertion_report 							:: proc() ->																																		#link_name "SDL_ResetAssertionReport" ---;
	sdl_restore_window 									:: proc() ->																																		#link_name "SDL_RestoreWindow" ---;
	sdl_save_all_dollar_templates 						:: proc() ->																																		#link_name "SDL_SaveAllDollarTemplates" ---;
	sdl_save_bmp_rw 									:: proc() ->																																		#link_name "SDL_SaveBMP_RW" ---;
	sdl_save_dollar_template 							:: proc() ->																																		#link_name "SDL_SaveDollarTemplate" ---;
	sdl_sem_post 										:: proc() ->																																		#link_name "SDL_SemPost" ---;
	sdl_sem_try_wait 									:: proc() ->																																		#link_name "SDL_SemTryWait" ---;
	sdl_sem_value 										:: proc() ->																																		#link_name "SDL_SemValue" ---;
	sdl_sem_wait 										:: proc() ->																																		#link_name "SDL_SemWait" ---;
	sdl_sem_wait_timeout 								:: proc() ->																																		#link_name "SDL_SemWaitTimeout" ---;
	sdl_set_assertion_handler 							:: proc() ->																																		#link_name "SDL_SetAssertionHandler" ---;
	sdl_set_clip_rect 									:: proc() ->																																		#link_name "SDL_SetClipRect" ---;
	sdl_set_clipboard_text 								:: proc() ->																																		#link_name "SDL_SetClipboardText" ---;
	sdl_set_color_key 									:: proc() ->																																		#link_name "SDL_SetColorKey" ---;
	sdl_set_cursor 										:: proc() ->																																		#link_name "SDL_SetCursor" ---;
	sdl_set_error 										:: proc() ->																																		#link_name "SDL_SetError" ---;
	sdl_set_event_filter 								:: proc() ->																																		#link_name "SDL_SetEventFilter" ---;
	sdl_set_hint 										:: proc() ->																																		#link_name "SDL_SetHint" ---;
	sdl_set_hint_with_priority 							:: proc() ->																																		#link_name "SDL_SetHintWithPriority" ---;
	sdl_set_main_ready 									:: proc() ->																																		#link_name "SDL_SetMainReady" ---;
	sdl_set_mod_state 									:: proc() ->																																		#link_name "SDL_SetModState" ---;
	sdl_set_palette_colors 								:: proc() ->																																		#link_name "SDL_SetPaletteColors" ---;
	sdl_set_pixel_format_palette 						:: proc() ->																																		#link_name "SDL_SetPixelFormatPalette" ---;
	sdl_set_relative_mouse_mode 						:: proc() ->																																		#link_name "SDL_SetRelativeMouseMode" ---;
	sdl_set_render_draw_blend_mode 						:: proc() ->																																		#link_name "SDL_SetRenderDrawBlendMode" ---;
	sdl_set_render_draw_color 							:: proc() ->																																		#link_name "SDL_SetRenderDrawColor" ---;
	sdl_set_render_target 								:: proc() ->																																		#link_name "SDL_SetRenderTarget" ---;
	sdl_set_surface_alpha_mod 							:: proc() ->																																		#link_name "SDL_SetSurfaceAlphaMod" ---;
	sdl_set_surface_blend_mode 							:: proc() ->																																		#link_name "SDL_SetSurfaceBlendMode" ---;
	sdl_set_surface_color_mod 							:: proc() ->																																		#link_name "SDL_SetSurfaceColorMod" ---;
	sdl_set_surface_palette 							:: proc() ->																																		#link_name "SDL_SetSurfacePalette" ---;
	sdl_set_surface_rle 								:: proc() ->																																		#link_name "SDL_SetSurfaceRLE" ---;
	sdl_set_text_input_rect 							:: proc() ->																																		#link_name "SDL_SetTextInputRect" ---;
	sdl_set_texture_alpha_mod 							:: proc() ->																																		#link_name "SDL_SetTextureAlphaMod" ---;
	sdl_set_texture_blend_mode 							:: proc() ->																																		#link_name "SDL_SetTextureBlendMode" ---;
	sdl_set_texture_color_mod 							:: proc() ->																																		#link_name "SDL_SetTextureColorMod" ---;
	sdl_set_thread_priority 							:: proc() ->																																		#link_name "SDL_SetThreadPriority" ---;
	sdl_set_window_bordered 							:: proc() ->																																		#link_name "SDL_SetWindowBordered" ---;
	sdl_set_window_brightness 							:: proc() ->																																		#link_name "SDL_SetWindowBrightness" ---;
	sdl_set_window_data 								:: proc() ->																																		#link_name "SDL_SetWindowData" ---;
	sdl_set_window_display_mode 						:: proc() ->																																		#link_name "SDL_SetWindowDisplayMode" ---;
	sdl_set_window_fullscreen 							:: proc() ->																																		#link_name "SDL_SetWindowFullscreen" ---;
	sdl_set_window_gamma_ramp 							:: proc() ->																																		#link_name "SDL_SetWindowGammaRamp" ---;
	sdl_set_window_grab 								:: proc() ->																																		#link_name "SDL_SetWindowGrab" ---;
	sdl_set_window_hit_test 							:: proc() ->																																		#link_name "SDL_SetWindowHitTest" ---;
	sdl_set_window_icon 								:: proc() ->																																		#link_name "SDL_SetWindowIcon" ---;
	sdl_set_window_input_focus 							:: proc() ->																																		#link_name "SDL_SetWindowInputFocus" ---;
	sdl_set_window_maximum_size 						:: proc() ->																																		#link_name "SDL_SetWindowMaximumSize" ---;
	sdl_set_window_minimum_size 						:: proc() ->																																		#link_name "SDL_SetWindowMinimumSize" ---;
	sdl_set_window_modal_for 							:: proc() ->																																		#link_name "SDL_SetWindowModalFor" ---;
	sdl_set_window_opacity 								:: proc() ->																																		#link_name "SDL_SetWindowOpacity" ---;
	sdl_set_window_position 							:: proc() ->																																		#link_name "SDL_SetWindowPosition" ---;
	sdl_set_window_resizable 							:: proc() ->																																		#link_name "SDL_SetWindowResizable" ---;
	sdl_set_window_shape 								:: proc() ->																																		#link_name "SDL_SetWindowShape" ---;
	sdl_set_window_size 								:: proc() ->																																		#link_name "SDL_SetWindowSize" ---;
	sdl_set_window_title 								:: proc() ->																																		#link_name "SDL_SetWindowTitle" ---;
	sdl_set_windows_message_hook 						:: proc() ->																																		#link_name "SDL_SetWindowsMessageHook" ---;
	sdl_show_cursor 									:: proc() ->																																		#link_name "SDL_ShowCursor" ---;
	sdl_show_message_box 								:: proc() ->																																		#link_name "SDL_ShowMessageBox" ---;
	sdl_show_simple_message_box 						:: proc() ->																																		#link_name "SDL_ShowSimpleMessageBox" ---;
	sdl_show_window 									:: proc() ->																																		#link_name "SDL_ShowWindow" ---;
	sdl_soft_stretch 									:: proc() ->																																		#link_name "SDL_SoftStretch" ---;
	sdl_start_text_input 								:: proc() ->																																		#link_name "SDL_StartTextInput" ---;
	sdl_stop_text_input 								:: proc() ->																																		#link_name "SDL_StopTextInput" ---;
	sdl_tls_create 										:: proc() ->																																		#link_name "SDL_TLSCreate" ---;
	sdl_tls_get 										:: proc() ->																																		#link_name "SDL_TLSGet" ---;
	sdl_tls_set 										:: proc() ->																																		#link_name "SDL_TLSSet" ---;
	sdl_thread_id 										:: proc() ->																																		#link_name "SDL_ThreadID" ---;
	sdl_try_lock_mutex 									:: proc() ->																																		#link_name "SDL_TryLockMutex" ---;
	sdl_union_rect 										:: proc() ->																																		#link_name "SDL_UnionRect" ---;
	sdl_unload_object 									:: proc() ->																																		#link_name "SDL_UnloadObject" ---;
	sdl_unlock_audio 									:: proc() ->																																		#link_name "SDL_UnlockAudio" ---;
	sdl_unlock_audio_device 							:: proc() ->																																		#link_name "SDL_UnlockAudioDevice" ---;
	sdl_unlock_mutex 									:: proc() ->																																		#link_name "SDL_UnlockMutex" ---;
	sdl_unlock_surface 									:: proc() ->																																		#link_name "SDL_UnlockSurface" ---;
	sdl_unlock_texture 									:: proc() ->																																		#link_name "SDL_UnlockTexture" ---;
	sdl_unregister_app 									:: proc() ->																																		#link_name "SDL_UnregisterApp" ---;
	sdl_update_texture 									:: proc() ->																																		#link_name "SDL_UpdateTexture" ---;
	sdl_update_window_surface 							:: proc() ->																																		#link_name "SDL_UpdateWindowSurface" ---;
	sdl_update_window_surface_rects 					:: proc() ->																																		#link_name "SDL_UpdateWindowSurfaceRects" ---;
	sdl_update_yuv_texture 								:: proc() ->																																		#link_name "SDL_UpdateYUVTexture" ---;
	sdl_upper_blit 										:: proc() ->																																		#link_name "SDL_UpperBlit" ---;
	sdl_upper_blit_scaled 								:: proc() ->																																		#link_name "SDL_UpperBlitScaled" ---;
	sdl_video_init 										:: proc() ->																																		#link_name "SDL_VideoInit" ---;
	sdl_video_quit 										:: proc() ->																																		#link_name "SDL_VideoQuit" ---;
	sdl_wait_event 										:: proc() ->																																		#link_name "SDL_WaitEvent" ---;
	sdl_wait_event_timeout 								:: proc() ->																																		#link_name "SDL_WaitEventTimeout" ---;
	sdl_wait_thread 									:: proc() ->																																		#link_name "SDL_WaitThread" ---;
	sdl_warp_mouse_global 								:: proc() ->																																		#link_name "SDL_WarpMouseGlobal" ---;
	sdl_warp_mouse_in_window 							:: proc() ->																																		#link_name "SDL_WarpMouseInWindow" ---;
	sdl_was_init 										:: proc() ->																																		#link_name "SDL_WasInit" ---;
	sdl_write_be16 										:: proc() ->																																		#link_name "SDL_WriteBE16" ---;
	sdl_write_be32 										:: proc() ->																																		#link_name "SDL_WriteBE32" ---;
	sdl_write_be64 										:: proc() ->																																		#link_name "SDL_WriteBE64" ---;
	sdl_write_le16 										:: proc() ->																																		#link_name "SDL_WriteLE16" ---;
	sdl_write_le32 										:: proc() ->																																		#link_name "SDL_WriteLE32" ---;
	sdl_write_le64 										:: proc() ->																																		#link_name "SDL_WriteLE64" ---;
	sdl_write_u8 										:: proc() ->																																		#link_name "SDL_WriteU8" ---;
	sdl_abs 											:: proc() ->																																		#link_name "SDL_abs" ---;
	sdl_acos 											:: proc() ->																																		#link_name "SDL_acos" ---;
	sdl_asin 											:: proc() ->																																		#link_name "SDL_asin" ---;
	sdl_atan 											:: proc() ->																																		#link_name "SDL_atan" ---;
	sdl_atan2 											:: proc() ->																																		#link_name "SDL_atan2" ---;
	sdl_atof 											:: proc() ->																																		#link_name "SDL_atof" ---;
	sdl_atoi 											:: proc() ->																																		#link_name "SDL_atoi" ---;
	sdl_calloc 											:: proc() ->																																		#link_name "SDL_calloc" ---;
	sdl_ceil 											:: proc() ->																																		#link_name "SDL_ceil" ---;
	sdl_copysign 										:: proc() ->																																		#link_name "SDL_copysign" ---;
	sdl_cos 											:: proc() ->																																		#link_name "SDL_cos" ---;
	sdl_cosf 											:: proc() ->																																		#link_name "SDL_cosf" ---;
	sdl_fabs 											:: proc() ->																																		#link_name "SDL_fabs" ---;
	sdl_floor 											:: proc() ->																																		#link_name "SDL_floor" ---;
	sdl_free 											:: proc() ->																																		#link_name "SDL_free" ---;
	sdl_getenv 											:: proc() ->																																		#link_name "SDL_getenv" ---;
	sdl_iconv 											:: proc() ->																																		#link_name "SDL_iconv" ---;
	sdl_iconvclose 										:: proc() ->																																		#link_name "SDL_iconv_close" ---;
	sdl_iconvopen 										:: proc() ->																																		#link_name "SDL_iconv_open" ---;
	sdl_iconvstring 									:: proc() ->																																		#link_name "SDL_iconv_string" ---;
	sdl_isdigit 										:: proc() ->																																		#link_name "SDL_isdigit" ---;
	sdl_isspace 										:: proc() ->																																		#link_name "SDL_isspace" ---;
	sdl_itoa 											:: proc() ->																																		#link_name "SDL_itoa" ---;
	sdl_lltoa 											:: proc() ->																																		#link_name "SDL_lltoa" ---;
	sdl_log 											:: proc() ->																																		#link_name "SDL_log" ---;
	sdl_ltoa 											:: proc() ->																																		#link_name "SDL_ltoa" ---;
	sdl_malloc 											:: proc() ->																																		#link_name "SDL_malloc" ---;
	sdl_memcmp 											:: proc() ->																																		#link_name "SDL_memcmp" ---;
	sdl_memcpy 											:: proc() ->																																		#link_name "SDL_memcpy" ---;
	sdl_memmove 										:: proc() ->																																		#link_name "SDL_memmove" ---;
	sdl_memset 											:: proc() ->																																		#link_name "SDL_memset" ---;
	sdl_pow 											:: proc() ->																																		#link_name "SDL_pow" ---;
	sdl_qsort 											:: proc() ->																																		#link_name "SDL_qsort" ---;
	sdl_realloc 										:: proc() ->																																		#link_name "SDL_realloc" ---;
	sdl_scalbn 											:: proc() ->																																		#link_name "SDL_scalbn" ---;
	sdl_setenv 											:: proc() ->																																		#link_name "SDL_setenv" ---;
	sdl_sin 											:: proc() ->																																		#link_name "SDL_sin" ---;
	sdl_sinf 											:: proc() ->																																		#link_name "SDL_sinf" ---;
	sdl_snprintf 										:: proc() ->																																		#link_name "SDL_snprintf" ---;
	sdl_sqrt 											:: proc() ->																																		#link_name "SDL_sqrt" ---;
	sdl_sqrtf 											:: proc() ->																																		#link_name "SDL_sqrtf" ---;
	sdl_sscanf 											:: proc() ->																																		#link_name "SDL_sscanf" ---;
	sdl_strcasecmp 										:: proc() ->																																		#link_name "SDL_strcasecmp" ---;
	sdl_strchr 											:: proc() ->																																		#link_name "SDL_strchr" ---;
	sdl_strcmp 											:: proc() ->																																		#link_name "SDL_strcmp" ---;
	sdl_strdup 											:: proc() ->																																		#link_name "SDL_strdup" ---;
	sdl_strlcat 										:: proc() ->																																		#link_name "SDL_strlcat" ---;
	sdl_strlcpy 										:: proc() ->																																		#link_name "SDL_strlcpy" ---;
	sdl_strlen 											:: proc() ->																																		#link_name "SDL_strlen" ---;
	sdl_strlwr 											:: proc() ->																																		#link_name "SDL_strlwr" ---;
	sdl_strncasecmp 									:: proc() ->																																		#link_name "SDL_strncasecmp" ---;
	sdl_strncmp 										:: proc() ->																																		#link_name "SDL_strncmp" ---;
	sdl_strrchr 										:: proc() ->																																		#link_name "SDL_strrchr" ---;
	sdl_strrev 											:: proc() ->																																		#link_name "SDL_strrev" ---;
	sdl_strstr 											:: proc() ->																																		#link_name "SDL_strstr" ---;
	sdl_strtod 											:: proc() ->																																		#link_name "SDL_strtod" ---;
	sdl_strtol 											:: proc() ->																																		#link_name "SDL_strtol" ---;
	sdl_strtoll 										:: proc() ->																																		#link_name "SDL_strtoll" ---;
	sdl_strtoul 										:: proc() ->																																		#link_name "SDL_strtoul" ---;
	sdl_strtoull 										:: proc() ->																																		#link_name "SDL_strtoull" ---;
	sdl_strupr 											:: proc() ->																																		#link_name "SDL_strupr" ---;
	sdl_tan 											:: proc() ->																																		#link_name "SDL_tan" ---;
	sdl_tanf 											:: proc() ->																																		#link_name "SDL_tanf" ---;
	sdl_tolower 										:: proc() ->																																		#link_name "SDL_tolower" ---;
	sdl_toupper 										:: proc() ->																																		#link_name "SDL_toupper" ---;
	sdl_uitoa 											:: proc() ->																																		#link_name "SDL_uitoa" ---;
	sdl_ulltoa 											:: proc() ->																																		#link_name "SDL_ulltoa" ---;
	sdl_ultoa 											:: proc() ->																																		#link_name "SDL_ultoa" ---;
	sdl_utf8strlcpy 									:: proc() ->																																		#link_name "SDL_utf8strlcpy" ---;
	sdl_vsnprintf 										:: proc() ->																																		#link_name "SDL_vsnprintf" ---;
	sdl_vsscanf 										:: proc() ->																																		#link_name "SDL_vsscanf" ---;
	sdl_wcslcat 										:: proc() ->																																		#link_name "SDL_wcslcat" ---;
	sdl_wcslcpy 										:: proc() ->																																		#link_name "SDL_wcslcpy" ---;
	sdl_wcslen 											:: proc() ->																																		#link_name "SDL_wcslen" ---;
	*/
}

main :: proc()
{
	
}